ylab(label = "Price in $US")+
theme(axis.text = element_text(size=10),
axis.title = element_text(size=15)) +
NULL
# Pearson correlation coefficient
cor(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "pearson")
cor.test(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "pearson")
ggplot(data = cell_phones_df, aes(x = cell_phone_memory, y = cell_phone_price))+
geom_point(size=4)+
theme_bw()+
xlab(label = "Memory")+
ylab(label = "Price in $US")+
theme(axis.text = element_text(size=10),
axis.title = element_text(size=15)) +
annotate(geom = "text",
label= paste0("Pearson's r = ", round(cor.test(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "pearson")$estimate, 2)),
x = 50, y = 600, size=7)+
annotate(geom = "text",
label= paste0("p-value = ", cor.test(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "pearson")$p.value),
x = 50, y = 550, size=7)+
NULL
# Spearman's rank correlation coefficient - Spearman's rho
cor(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "spearman")
cor.test(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "spearman")
ggplot(data = cell_phones_df, aes(x = cell_phone_memory, y = cell_phone_price))+
geom_point(size=4)+
theme_bw()+
xlab(label = "Memory")+
ylab(label = "Price in $US")+
theme(axis.text = element_text(size=10),
axis.title = element_text(size=15)) +
annotate(geom = "text",
label= paste0("Pearson's r = ", round(cor.test(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "pearson")$estimate, 2)),
x = 50, y = 600, size=7)+
annotate(geom = "text",
label= paste0("p-value = ", cor.test(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "pearson")$p.value),
x = 50, y = 550, size=7)+
annotate(geom = "text",
label= paste0("Spearman's rho = ", round(cor.test(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "spearman")$estimate, 2)),
x = 100, y = 350, size=7)+
annotate(geom = "text",
label= paste0("p-value = ", cor.test(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "spearman")$p.value),
x = 100, y = 300, size=7)+
NULL
# Exponential relationship
cell_phone_memory_2 <- c(8,   16,  32,  64, 128, 256, 512, 1024, 2048, 4096)
cell_phone_price_2  <- c(80, 100, 150, 220, 300, 360, 400,  500,  700, 1000)
cell_phones_df_2 <- data.frame(cell_phone_memory_2, cell_phone_price_2)
ggplot(data = cell_phones_df_2, aes(x = cell_phone_memory_2, y = cell_phone_price_2))+
geom_point(size=4, colour="red")+
theme_bw()+
xlab(label = "Memory")+
ylab(label = "Price in $US")+
theme(axis.text = element_text(size=10),
axis.title = element_text(size=15)) +
NULL
ggplot(data = cell_phones_df_2, aes(x = cell_phone_memory_2, y = cell_phone_price_2))+
geom_point(size=4, colour="red")+
theme_bw()+
xlab(label = "Memory")+
ylab(label = "Price in $US")+
theme(axis.text = element_text(size=10),
axis.title = element_text(size=15)) +
NULL
cor(cell_phones_df_2$cell_phone_memory_2, cell_phones_df_2$cell_phone_price_2)
cor.test(cell_phones_df_2$cell_phone_memory_2, cell_phones_df_2$cell_phone_price_2)
cor(cell_phones_df_2$cell_phone_memory_2, cell_phones_df_2$cell_phone_price_2, method = "spearman")
cor.test(cell_phones_df_2$cell_phone_memory_2, cell_phones_df_2$cell_phone_price_2, method = "spearman")
ggplot(data = cell_phones_df_2, aes(x = cell_phone_memory_2, y = cell_phone_price_2))+
geom_point(size=4, colour="red")+
theme_bw()+
xlab(label = "Memory")+
ylab(label = "Price in $US")+
theme(axis.text = element_text(size=10),
axis.title = element_text(size=15)) +
annotate(geom = "text",
label= paste0("Pearson's r = ", round(cor.test(cell_phones_df_2$cell_phone_memory_2, cell_phones_df_2$cell_phone_price_2, method = "pearson")$estimate, 2)),
x = 1000, y = 990, size=7)+
annotate(geom = "text",
label= paste0("p-value = ", cor.test(cell_phones_df_2$cell_phone_memory_2, cell_phones_df_2$cell_phone_price_2, method = "pearson")$p.value),
x = 1500, y = 900, size=7)+
annotate(geom = "text",
label= paste0("Spearman's rho = ", round(cor.test(cell_phones_df_2$cell_phone_memory_2, cell_phones_df_2$cell_phone_price_2, method = "spearman")$estimate, 2)),
x = 3000, y = 350, size=7)+
annotate(geom = "text",
label= paste0("p-value = ", cor.test(cell_phones_df_2$cell_phone_memory_2, cell_phones_df_2$cell_phone_price_2, method = "spearman")$p.value),
x = 3000, y = 300, size=7)+
NULL
# Linear regression
cor.test(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "pearson")
cor.test(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "spearman")
lm(data = cell_phones_df, formula = cell_phone_price ~ cell_phone_memory)
summary(lm(data = cell_phones_df, formula = cell_phone_price ~ cell_phone_memory))
ggplot(data = cell_phones_df, aes(x = cell_phone_memory, y = cell_phone_price))+
geom_point(size=4)+
theme_bw()+
xlab(label = "Memory")+
ylab(label = "Price in $US")+
theme(axis.text = element_text(size=10),
axis.title = element_text(size=15)) +
annotate(geom = "text",
label= paste0("Pearson's r = ", round(cor.test(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "pearson")$estimate, 2)),
x = 50, y = 600, size=7)+
annotate(geom = "text",
label= paste0("p-value = ", cor.test(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "pearson")$p.value),
x = 50, y = 550, size=7)+
annotate(geom = "text",
label= paste0("Spearman's rho = ", round(cor.test(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "spearman")$estimate, 2)),
x = 100, y = 350, size=7)+
annotate(geom = "text",
label= paste0("p-value = ", cor.test(cell_phones_df$cell_phone_memory, cell_phones_df$cell_phone_price, method = "spearman")$p.value),
x = 100, y = 300, size=7)+
geom_smooth(method = "lm")+
NULL
ggplot(data = cell_phones_df, aes(x = cell_phone_memory, y = cell_phone_price))+
geom_point(size=4)+
theme_bw()+
xlab(label = "Memory")+
ylab(label = "Price in $US")+
theme(axis.text = element_text(size=10),
axis.title = element_text(size=15)) +
annotate(geom = "text",
label= paste0("Intercept = ", round(lm(formula = cell_phone_price ~ cell_phone_memory, data = cell_phones_df)$coefficients[1], 2)),
x = 50, y = 600, size=7)+
annotate(geom = "text",
label= paste0("Slope = ", round(lm(formula = cell_phone_price ~ cell_phone_memory, data = cell_phones_df)$coefficients[2], 2)),
x = 50, y = 550, size=7)+
annotate(geom = "text",
label= paste0("R-squared = ", round(summary(lm(formula = cell_phone_price ~ cell_phone_memory, data = cell_phones_df))$r.squared, 2)),
x = 100, y = 250, size=7)+
annotate(geom = "text",
label= paste0("p-value = ", summary(lm(formula = cell_phone_price ~ cell_phone_memory, data = cell_phones_df))$coefficients[,4][2]),
x = 80, y = 200, size=7)+
geom_smooth(method = "lm")+
NULL
# Exponential
# Linear regression
ggplot(data = cell_phones_df_2, aes(x = cell_phone_memory_2, y = cell_phone_price_2))+
geom_point(size=4, colour="red")+
theme_bw()+
xlab(label = "Memory")+
ylab(label = "Price in $US")+
theme(axis.text = element_text(size=10),
axis.title = element_text(size=15)) +
annotate(geom = "text",
label= paste0("Pearson's r = ", round(cor.test(cell_phones_df_2$cell_phone_memory_2, cell_phones_df_2$cell_phone_price_2, method = "pearson")$estimate, 2)),
x = 1000, y = 990, size=7)+
annotate(geom = "text",
label= paste0("p-value = ", cor.test(cell_phones_df_2$cell_phone_memory_2, cell_phones_df_2$cell_phone_price_2, method = "pearson")$p.value),
x = 1500, y = 900, size=7)+
annotate(geom = "text",
label= paste0("Spearman's rho = ", round(cor.test(cell_phones_df_2$cell_phone_memory_2, cell_phones_df_2$cell_phone_price_2, method = "spearman")$estimate, 2)),
x = 3000, y = 350, size=7)+
annotate(geom = "text",
label= paste0("p-value = ", cor.test(cell_phones_df_2$cell_phone_memory_2, cell_phones_df_2$cell_phone_price_2, method = "spearman")$p.value),
x = 3000, y = 300, size=7)+
NULL
cor.test(cell_phones_df_2$cell_phone_memory_2, cell_phones_df_2$cell_phone_price_2, method = "pearson")
cor.test(cell_phones_df_2$cell_phone_memory_2, cell_phones_df_2$cell_phone_price_2, method = "spearman")
lm(data = cell_phones_df_2, formula = cell_phone_price_2 ~ cell_phone_memory_2)
summary(lm(data = cell_phones_df_2, formula = cell_phone_price_2 ~ cell_phone_memory_2))
ggplot(data = cell_phones_df, aes(x = cell_phone_memory, y = cell_phone_price))+
geom_point(size=4)+
theme_bw()+
xlab(label = "Memory")+
ylab(label = "Price in $US")+
theme(axis.text = element_text(size=10),
axis.title = element_text(size=15)) +
annotate(geom = "text",
label= paste0("Intercept = ", round(lm(formula = cell_phone_price ~ cell_phone_memory, data = cell_phones_df)$coefficients[1], 2)),
x = 50, y = 600, size=7)+
annotate(geom = "text",
label= paste0("Slope = ", round(lm(formula = cell_phone_price ~ cell_phone_memory, data = cell_phones_df)$coefficients[2], 2)),
x = 50, y = 550, size=7)+
annotate(geom = "text",
label= paste0("R-squared = ", round(summary(lm(formula = cell_phone_price ~ cell_phone_memory, data = cell_phones_df))$r.squared, 2)),
x = 100, y = 250, size=7)+
annotate(geom = "text",
label= paste0("p-value = ", summary(lm(formula = cell_phone_price ~ cell_phone_memory, data = cell_phones_df))$coefficients[,4][2]),
x = 80, y = 200, size=7)+
geom_smooth(method = "lm")+
NULL
matrix(1:100)
matrix(1:100, nrow = 10)
example_matrix <- matrix(1:100, nrow = 10)
diag(example_matrix)
example_matrix <- matrix(0:99, nrow = 10)
example_matrix
average_vector <- c()
average_vector[1] <- 0
example_matrix <- read.delim(file = "Downloads/distance-matrix.tsv", sep = "\t")
View(example_matrix)
example_matrix <- read.delim(file = "Downloads/distance-matrix.tsv", sep = "\t", row.names = T)
example_matrix <- read.delim(file = "Downloads/distance-matrix.tsv", sep = "\t", row.names = 1)
average_vector[1] <- mean(example_matrix[1,1])
average_vector
average_vector[2] <- mean(example_matrix[1,1], example_matrix[1,2], example_matrix[2,2])
average_vector
mean(example_matrix[1,1], example_matrix[1,2], example_matrix[2,2])
example_matrix[2,2]
example_matrix[1,2]
example_matrix[1,1]
average_vector[2] <- mean(c(example_matrix[1,1], example_matrix[1,2], example_matrix[2,2]))
average_vector
average_vector[3] <- mean(c(example_matrix[1,1], example_matrix[1,2], example_matrix[1,3],
example_matrix[2,2], example_matrix[2,3],
example_matrix[3,3]))
average_vector
lower.tri(example_matrix, diag = TRUE)
example_matrix[lower.tri(example_matrix, diag = TRUE)]
example_matrix[lower.tri(example_matrix[1:3, 1:3], diag = TRUE)]
example_matrixexample_matrix[1:3, 1:3][lower.tri(example_matrix[1:3, 1:3], diag = TRUE)]
example_matrix[1:3, 1:3][lower.tri(example_matrix[1:3, 1:3], diag = TRUE)]
mean(example_matrix[1:3, 1:3][lower.tri(example_matrix[1:3, 1:3], diag = TRUE)])
average_vector[3] <- mean(c(example_matrix[1,1], example_matrix[1,2], example_matrix[1,3],
example_matrix[2,2], example_matrix[2,3],
example_matrix[3,3]))
average_vector
length(example_matrix)
for (i in length(example_matrix)) {
average_vector[i] <- mean(example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)])
}
for (i in length(example_matrix)) {
print(i)
average_vector[i] <- mean(example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)])
}
for (i in 1:length(example_matrix)) {
print(i)
average_vector[i] <- mean(example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)])
}
average_vector
i = 258
mean(example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)])
average_vector <- c()
for (i in 1:length(example_matrix)) {
#print(i)
average_vector[i] <- mean(example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)])
}
average_vector
i = 258
mean(example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)])
example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)]
mean(example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)])
average_vector[258]
mean(example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)])
length(average_vector)
for (i in 1:length(example_matrix)) {
#print(i)
average_vector[i] <- mean(example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)])
}
length(average_vector)
average_vector[258]
i = 258
mean(example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)])
average_vector
average_vector[258]
i = 3
mean(example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)])
example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)]
mean(example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)])
for (i in 1:length(example_matrix)) {
#print(i)
average_vector[i] <- mean(example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)])
}
length(average_vector)
average_vector[7]
i = 7
mean(example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)])
average_vector
example_matrix <- example_matrix[, order(as.integer(colnames(example_matrix)))]
example_matrix <- read.delim(file = "Downloads/distance-matrix.tsv", sep = "\t", row.names = 1, col.names = 1)
example_matrix <- read.delim(file = "Downloads/distance-matrix.tsv", sep = "\t", row.names = 1)
example_matrix[colnames(example_matrix), ]
rownames(example_matrix) <- paste0("X", rownames(example_matrix))
rownames(example_matrix)
example_matrix <- read.delim(file = "Downloads/distance-matrix.tsv", sep = "\t", row.names = 1)
rownames(example_matrix) <- paste0("X", rownames(example_matrix))
example_matrix[colnames(example_matrix), ]
example_matrix <- read.delim(file = "Downloads/distance-matrix.tsv", sep = "\t", row.names = 1)
example_matrix[order(as.numeric(rownames(example_matrix))),]
example_matrix <- example_matrix[order(as.numeric(rownames(example_matrix))),]
colnames(example_matrix)
colnames(example_matrix) <- gsub(x = colnames(example_matrix), pattern = "X", replacement = "")
colnames(example_matrix)
example_matrix <- example_matrix[, order(as.numeric(colnames(example_matrix)))]
average_vector <- c()
for (i in 1:length(example_matrix)) {
#print(i)
average_vector[i] <- mean(example_matrix[1:i, 1:i][lower.tri(example_matrix[1:i, 1:i], diag = TRUE)])
}
average_vector
View(example_matrix)
install.packages(c("ape", "ggrepel", "ggridges", "ggstance"))
source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
biocLite()
biocLite("BiocUpgrade")
install.packages("BiocManager")
#source("https://bioconductor.org/biocLite.R")
#biocLite()
#biocLite("BiocUpgrade")
#biocLite('ape')
#biocLite("ggtree")
#install.packages('ggridges')
#install.packages("ggrepel")
#install.packages("ggstance")
library('ape')
library('ggtree')
library('ggridges')
library("ggrepel")
library('ggstance')
biocLite("ggtree")
#source("https://bioconductor.org/biocLite.R")
#biocLite()
#biocLite("BiocUpgrade")
#biocLite('ape')
#biocLite("ggtree")
BiocManager::install("ggtree")
#source("https://bioconductor.org/biocLite.R")
#biocLite()
#biocLite("BiocUpgrade")
#biocLite('ape')
BiocManager::install("ape")
#install.packages("BiocManager")
#BiocManager::install("ape")
#BiocManager::install("ggtree")
#install.packages('ggridges')
#install.packages("ggrepel")
#install.packages("ggstance")
library('ape')
library('ggtree')
library('ggridges')
library("ggrepel")
library('ggstance')
tree_raw <- read.tree(file = "1_proteomes_tree.nwk")
setwd("~/Dropbox/PhD/2_MethaEvol/3_round/Fig1_code/Fig1_S2")
tree_raw <- read.tree(file = "1_proteomes_tree.nwk")
tree_rooted <- root(tree_raw, outgroup = "Bacteroides_ovatus_ATCC_8483", edgelabel = TRUE, resolve.root=TRUE)
genomes_list <- read.delim(file = "2_genomes_list.txt", header = T, sep = '\t')[,1:2]
rownames(genomes_list) <- genomes_list[,1]
groupInfo <- list(Ia=rownames(genomes_list)[genomes_list$group=='Ia'],
Ib=rownames(genomes_list)[genomes_list$group=='Ib'],
#Ic=rownames(genomes_list)[genomes_list$group=='Ic'],
IIa=rownames(genomes_list)[genomes_list$group=='IIa'],
IIb=rownames(genomes_list)[genomes_list$group=='IIb'],
III=rownames(genomes_list)[genomes_list$group=='III'])
tree_grouped <- groupOTU(object = tree_rooted, focus = groupInfo)
all_df <- data.frame(read.table(file = "3_all_dataframe.txt", header = TRUE, stringsAsFactors = FALSE))
all_df <- all_df[,c(2,1,3,4,5)]
p_tree <- ggtree(tree_grouped) + geom_tiplab(size=3, offset = 0.03, align=TRUE, linesize=0.25)
#install.packages("BiocManager")
#BiocManager::install("ape")
#BiocManager::install("ggtree")
#install.packages('ggridges')
#install.packages("ggrepel")
#install.packages("ggstance")
library('ape')
library('ggtree')
library('ggridges')
library("ggrepel")
library('ggstance')
tree_raw <- read.tree(file = "1_proteomes_tree.nwk")
tree_rooted <- root(tree_raw, outgroup = "Bacteroides_ovatus_ATCC_8483", edgelabel = TRUE, resolve.root=TRUE)
genomes_list <- read.delim(file = "2_genomes_list.txt", header = T, sep = '\t')[,1:2]
rownames(genomes_list) <- genomes_list[,1]
groupInfo <- list(Ia=rownames(genomes_list)[genomes_list$group=='Ia'],
Ib=rownames(genomes_list)[genomes_list$group=='Ib'],
#Ic=rownames(genomes_list)[genomes_list$group=='Ic'],
IIa=rownames(genomes_list)[genomes_list$group=='IIa'],
IIb=rownames(genomes_list)[genomes_list$group=='IIb'],
III=rownames(genomes_list)[genomes_list$group=='III'])
tree_grouped <- groupOTU(object = tree_rooted, focus = groupInfo)
groupOTU
tree_rooted
tree_rooted <- root(tree_raw, outgroup = "Bacteroides_ovatus_ATCC_8483", edgelabel = TRUE, resolve.root=TRUE)
tree_grouped <- groupOTU(object = tree_rooted, focus = groupInfo)
tree_grouped <- groupOTU(object = tree_rooted, .data = groupInfo)
tree_grouped <- groupOTU(.data = tree_rooted, focus = groupInfo)
tree_grouped <- groupOTU(.data = tree_rooted, .node = groupInfo)
tree_grouped <- groupOTU(.data = tree_rooted, .node = groupInfo)
all_df <- data.frame(read.table(file = "3_all_dataframe.txt", header = TRUE, stringsAsFactors = FALSE))
all_df <- all_df[,c(2,1,3,4,5)]
p_tree <- ggtree(tree_grouped) + geom_tiplab(size=3, offset = 0.03, align=TRUE, linesize=0.25)
p_tree
length_df <- as.data.frame(table(all_df$BIN))
colnames(length_df) <- c('strain', 'Freq')
borrow_QC <- read.delim(file = "4_QC_data_IV.txt")[,c(1,3)]
borrow_QC <- unique(borrow_QC)
outgroup_sample <- data.frame(sample = "Isolate", strain="Bacteroides_ovatus_ATCC_8483")
borrow_QC <- rbind(borrow_QC, outgroup_sample)
length_df <- merge(x = length_df, y = borrow_QC, by = 'strain', all.x = TRUE)
#--------------- Fig1B --------------- #
p_GC <- facet_plot(p = p_tree,
panel="GC/GC3 distribution (fraction)",
data = all_df,
geom_density_ridges,
mapping = aes(x = GC, group=label, fill=group, alpha=0.8),
colour="black",
lwd = 0.3)
p_GC3 <- facet_plot(p_GC,
panel="GC/GC3 distribution (fraction)",
data = all_df,
geom_density_ridges,
mapping = aes(x=GC3, group=label, fill=group, alpha=0.6),
colour="black",
lwd=0.3)
manual_colors2 <- c("#CD9600", # Ia
"#7CAE00", # Ib
"#00BFC4", # IIa
"#00A9FF", # IIb
"#C77CFF") # III
pdf(file = "Fig1_S2.pdf", width = 7, height = 10, useDingbats=FALSE)
p_GC3 + scale_fill_manual(values = manual_colors2) + scale_color_manual(values = manual_colors2) + theme_tree2(legend.position="bottom")
dev.off()
p_GC3 + scale_fill_manual(values = manual_colors2) + scale_color_manual(values = manual_colors2) + theme_tree2(legend.position="bottom")
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
p_GC3 + scale_fill_manual(values = manual_colors2) + scale_color_manual(values = manual_colors2) + theme_tree2(legend.position="bottom")
manual_colors2 <- c("grey",    # outgroup,
"#CD9600", # Ia
"#7CAE00", # Ib
"#00BFC4", # IIa
"#00A9FF", # IIb
"#C77CFF") # III
pdf(file = "Fig1_S2.pdf", width = 7, height = 10, useDingbats=FALSE)
p_GC3 + scale_fill_manual(values = manual_colors2) + scale_color_manual(values = manual_colors2) + theme_tree2(legend.position="bottom")
dev.off()
p_GC
tree_raw <- read.tree(file = "1_proteomes_tree.nwk")
tree_rooted <- root(tree_raw, outgroup = "Bacteroides_ovatus_ATCC_8483", edgelabel = TRUE, resolve.root=TRUE)
genomes_list <- read.delim(file = "2_genomes_list.txt", header = T, sep = '\t')[,1:2]
rownames(genomes_list) <- genomes_list[,1]
groupInfo <- list(Ia=rownames(genomes_list)[genomes_list$group=='Ia'],
Ib=rownames(genomes_list)[genomes_list$group=='Ib'],
#Ic=rownames(genomes_list)[genomes_list$group=='Ic'],
IIa=rownames(genomes_list)[genomes_list$group=='IIa'],
IIb=rownames(genomes_list)[genomes_list$group=='IIb'],
III=rownames(genomes_list)[genomes_list$group=='III'])
tree_grouped <- groupOTU(.data = tree_rooted, .node = groupInfo)
all_df <- data.frame(read.table(file = "3_all_dataframe.txt", header = TRUE, stringsAsFactors = FALSE))
all_df <- all_df[,c(2,1,3,4,5)]
p_tree <- ggtree(tree_grouped) + geom_tiplab(size=3, offset = 0.03, align=TRUE, linesize=0.25)
length_df <- as.data.frame(table(all_df$BIN))
colnames(length_df) <- c('strain', 'Freq')
borrow_QC <- read.delim(file = "4_QC_data_IV.txt")[,c(1,3)]
borrow_QC <- unique(borrow_QC)
outgroup_sample <- data.frame(sample = "Isolate", strain="Bacteroides_ovatus_ATCC_8483")
borrow_QC <- rbind(borrow_QC, outgroup_sample)
length_df <- merge(x = length_df, y = borrow_QC, by = 'strain', all.x = TRUE)
#library('scales')      #to pick manual colors
#show_col(hue_pal()(8)) #to pick manual colors
#--------------- Fig1B --------------- #
p_GC <- facet_plot(p = p_tree,
panel="GC/GC3 distribution (fraction)",
data = all_df,
geom_density_ridges,
mapping = aes(x = GC, group=label, fill=group, alpha=0.8),
colour="black",
lwd = 0.3)
p_GC3 <- facet_plot(p_GC,
panel="GC/GC3 distribution (fraction)",
data = all_df,
geom_density_ridges,
mapping = aes(x=GC3, group=label, fill=group, alpha=0.6),
colour="black",
lwd=0.3)
manual_colors2 <- c("grey",    # outgroup,
"#CD9600", # Ia
"#7CAE00", # Ib
"#00BFC4", # IIa
"#00A9FF", # IIb
"#C77CFF") # III
pdf(file = "Fig1_S2.pdf", width = 7, height = 10, useDingbats=FALSE)
p_GC3 + scale_fill_manual(values = manual_colors2) + scale_color_manual(values = manual_colors2) + theme_tree2(legend.position="bottom")
dev.off()
#--------------- end --------------- #
#--------------- Fig1BS1 --------------- #
p_GS <- facet_plot(p_tree,
panel="Number of CDSs / 1000",
data = length_df,
geom_point,
mapping = aes(x=Freq/1E3, size=0.81, fill=group, alpha=0.7, pch=sample))
p_GC <- facet_plot(p = p_GS,
panel="GC/GC3 distribution (fraction)",
data = all_df,
geom_density_ridges,
mapping = aes(x = GC, group=label, fill=group, alpha=0.8),
colour="black",
lwd = 0.3)
p_GC3 <- facet_plot(p_GC,
panel="GC/GC3 distribution (fraction)",
data = all_df,
geom_density_ridges,
mapping = aes(x=GC3, group=label, fill=group, alpha=0.6),
colour="black",
lwd=0.3)
p_N  <- facet_plot(p_GC3,
panel="n",
data = length_df,
geom_text,
mapping = aes(x=0, label=paste0("n=",Freq)),
colour="black")
pdf(file = "Fig1BS1.pdf", width = 7, height = 10, useDingbats=FALSE)
p_N + scale_fill_manual(values = manual_colors2) + scale_color_manual(values = manual_colors2) + theme_tree2(legend.position="bottom")
dev.off()
pdf(file = "Fig1_S2b.pdf", width = 7, height = 10, useDingbats=FALSE)
p_N + scale_fill_manual(values = manual_colors2) + scale_color_manual(values = manual_colors2) + theme_tree2(legend.position="bottom")
dev.off()
