strip.text.x = element_text(face = "italic"),
legend.text = element_text(face = "italic"),
legend.position="none")+
xlab(label = "Gene")+
ylab(label = "ENC")+
NULL
ggplot(integrated_Nc_df[integrated_Nc_df$group=="Ia",], aes(x=gene_category, y=Nc, fill=gene_category)) +
#ggplot(integrated_Nc_df, aes(x=gene_category, y=Nc)) +
geom_boxplot(outlier.alpha = 0)+
geom_point(aes(fill=gene_category), shape=21, alpha = 0.5, position = position_jitter(width=0.2, height = 0)) +
#scale_fill_brewer(palette="Set1") +
scale_x_discrete(limits=c("pmo", "mmo","mxa", "xox", "hao", "pxm")) +
scale_fill_manual(values = c("red", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00", "yellow")) +
scale_colour_manual(values = c("red", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00", "yellow")) +
#facet_wrap(facets = ~group)+
stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons, method = "wilcox")+
theme_classic2()+
theme(strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.x = element_text(face = "italic"),
legend.text = element_text(face = "italic"),
legend.position="none")+
xlab(label = "Gene")+
ylab(label = "ENC")+
NULL
p_fig2c <- ggplot(integrated_Nc_df[integrated_Nc_df$group=="Ia",], aes(x=gene_category, y=Nc, fill=gene_category)) +
#ggplot(integrated_Nc_df, aes(x=gene_category, y=Nc)) +
geom_boxplot(outlier.alpha = 0)+
geom_point(aes(fill=gene_category), shape=21, alpha = 0.5, position = position_jitter(width=0.2, height = 0)) +
#scale_fill_brewer(palette="Set1") +
scale_x_discrete(limits=c("pmo", "mmo","mxa", "xox", "hao", "pxm")) +
scale_fill_manual(values = c("red", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00", "yellow")) +
scale_colour_manual(values = c("red", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00", "yellow")) +
#facet_wrap(facets = ~group)+
stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons, method = "wilcox")+
theme_classic2()+
theme(strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.x = element_text(face = "italic"),
legend.text = element_text(face = "italic"),
legend.position="none")+
xlab(label = "Gene")+
ylab(label = "ENC")+
NULL
ggsave(filename = "Fig2C.pdf", plot = p_fig2c, device = "pdf", width = 11, height = 4, useDingbats=FALSE)
p_fig2d <- ggplot(integrated_Nc_df[integrated_Nc_df$group=="Ia" | integrated_Nc_df$group=="Ib", ], aes(x=GC3, y=Nc)) +
#geom_hline(yintercept = 40, lty=2, lwd=0.5)+
scale_fill_brewer(palette="Set1") +
scale_colour_brewer(palette="Set1") +
geom_point(aes(fill=gene_category), alpha=0.8, size=2, color="black", shape=21)+ #geom_point(aes(fill=gene_category, shape=sample), alpha=0.5, size=2, color="black")+
#scale_shape_manual(values=c(21, 24))+
stat_smooth(method = "lm", se = FALSE, aes(colour=gene_category), show.legend = FALSE)+
geom_rug(aes(colour=gene_category), show.legend = FALSE) +
facet_grid(group ~ gene_category)+
theme_bw()+
theme(strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.x = element_text(face = "italic"),
legend.text = element_text(face = "italic"),
legend.position="none")+
xlab(label = expression(GC[3]))+
ylab(label = "ENC")+
guides(fill = guide_legend(title="Gene", override.aes=list(shape=21)), shape = guide_legend(title="", override.aes=list(color="black")))+
NULL
ggsave(filename = "Fig2D.pdf", plot = p_fig2d, device = "pdf", width = 11, height = 4, useDingbats=FALSE)
p_Fig2DS1 <- ggplot(integrated_Nc_df, aes(x=GC3, y=Nc)) +
#geom_hline(yintercept = 40, lty=2, lwd=0.5)+
scale_fill_brewer(palette="Set1") +
scale_colour_brewer(palette="Set1") +
geom_point(aes(fill=gene_category), alpha=0.8, size=2, color="black", shape=21)+ #geom_point(aes(fill=gene_category, shape=sample), alpha=0.5, size=2, color="black")+
#scale_shape_manual(values=c(21, 24))+
stat_smooth(method = "lm", se = FALSE, aes(colour=gene_category), show.legend = FALSE)+
geom_rug(aes(colour=gene_category), show.legend = FALSE) +
facet_grid(group ~ gene_category)+
theme_bw()+
theme(strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.x = element_text(face = "italic"),
legend.text = element_text(face = "italic"),
legend.position="none")+
xlab(label = expression(GC[3]))+
ylab(label = "ENC")+
guides(fill = guide_legend(title="Gene", override.aes=list(shape=21)), shape = guide_legend(title="", override.aes=list(color="black")))+
NULL
ggsave(filename = "Fig2DS1.pdf", plot = p_Fig2DS1, device = "pdf", width = 9, height = 10, useDingbats=FALSE)
ggsave(filename = "Fig2D.pdf", plot = p_fig2d, device = "pdf", width = 4, height = 4, useDingbats=FALSE)
p_fig2d <- ggplot(integrated_Nc_df[integrated_Nc_df$group=="Ia" | integrated_Nc_df$group=="Ib", ], aes(x=GC3, y=Nc)) +
#geom_hline(yintercept = 40, lty=2, lwd=0.5)+
scale_fill_brewer(palette="Set1") +
scale_colour_brewer(palette="Set1") +
geom_point(aes(fill=gene_category), alpha=0.8, size=2, color="black", shape=21)+ #geom_point(aes(fill=gene_category, shape=sample), alpha=0.5, size=2, color="black")+
#scale_shape_manual(values=c(21, 24))+
stat_smooth(method = "lm", se = FALSE, aes(colour=gene_category), show.legend = FALSE)+
geom_rug(aes(colour=gene_category), show.legend = FALSE) +
facet_grid(group ~ gene_category)+
theme_bw()+
theme(strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.x = element_text(face = "italic"),
legend.text = element_text(face = "italic"),
legend.position="none")+
xlab(label = expression(GC[3]))+
ylab(label = "ENC")+
guides(fill = guide_legend(title="Gene", override.aes=list(shape=21)), shape = guide_legend(title="", override.aes=list(color="black")))+
NULL
ggsave(filename = "Fig2D.pdf", plot = p_fig2d, device = "pdf", width = 11, height = 4, useDingbats=FALSE)
ggsave(filename = "Fig2C.pdf", plot = p_fig2c, device = "pdf", width = 4, height = 4, useDingbats=FALSE)
ggsave(filename = "Fig2C.pdf", plot = p_fig2c, device = "pdf", width = 5, height = 5, useDingbats=FALSE)
#install.packages('ggplot2')
#install.packages("ggpubr")
#install.packages("EnvStats")
#install.packages("ggpubr")
library('ggplot2')
library("ggpubr")
library("EnvStats")
library("ggpubr")
genes_metadata <- read.delim(file = "QC_data_CH4_IV.txt")
Nc_all_df <- read.delim(file = "2_Nc_chips_CH4.tsv", header = FALSE)
colnames(Nc_all_df) <- c("CDS", "Nc")
dim(genes_metadata)[1] == dim(Nc_all_df)[1]
integrated_Nc_df <- merge(x = genes_metadata, y = Nc_all_df, by="CDS", all.x = TRUE)
length(Nc_all_df)==dim(integrated_Nc_df)[1]
integrated_Nc_df$CDS_unambiguous <- paste(integrated_Nc_df$CDS, integrated_Nc_df$curated_gene, sep = "_")
integrated_Nc_df <- integrated_Nc_df[!duplicated(integrated_Nc_df$CDS_unambiguous), ]
dim(Nc_all_df)[1]==dim(integrated_Nc_df)[1]
integrated_Nc_df$gene_category <- gsub(pattern = "pmo/amo", replacement = "pmo", x = integrated_Nc_df$gene_category)
#integrated_Nc_df$gene_category <- factor(integrated_Nc_df$gene_category,levels = c("pmo", "mmo", "mxa", "xox", "hao", "pxm"))
my_comparisons <- list( c("pmo", "mmo"), c("pmo", "mxa"), c("pmo", "xox"), c("pmo", "hao"), c("pmo", "pxm") )
p_fig2c <- ggplot(integrated_Nc_df[integrated_Nc_df$group=="Ia",], aes(x=gene_category, y=Nc, fill=gene_category)) +
#ggplot(integrated_Nc_df, aes(x=gene_category, y=Nc)) +
geom_boxplot(outlier.alpha = 0)+
geom_point(aes(fill=gene_category), shape=21, alpha = 0.5, position = position_jitter(width=0.2, height = 0)) +
#scale_fill_brewer(palette="Set1") +
scale_x_discrete(limits=c("pmo", "mmo","mxa", "xox", "hao", "pxm")) +
scale_fill_manual(values = c("red", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00", "yellow")) +
scale_colour_manual(values = c("red", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00", "yellow")) +
#facet_wrap(facets = ~group)+
stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisons, method = "wilcox")+
theme_classic2()+
theme(strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.x = element_text(face = "italic"),
legend.text = element_text(face = "italic"),
legend.position="none")+
xlab(label = "Gene")+
ylab(label = "ENC")+
NULL
p_fig2c
p_fig2c <- ggplot(integrated_Nc_df[integrated_Nc_df$group=="Ia",], aes(x=gene_category, y=Nc, fill=gene_category)) +
#ggplot(integrated_Nc_df, aes(x=gene_category, y=Nc)) +
geom_boxplot(outlier.alpha = 0)+
geom_point(aes(fill=gene_category), shape=21, alpha = 0.5, position = position_jitter(width=0.2, height = 0)) +
#scale_fill_brewer(palette="Set1") +
scale_x_discrete(limits=c("pmo", "mmo","mxa", "xox", "hao", "pxm")) +
scale_fill_manual(values = c("red", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00", "yellow")) +
scale_colour_manual(values = c("red", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00", "yellow")) +
#facet_wrap(facets = ~group)+
stat_compare_means( comparisons = my_comparisons, method = "wilcox")+
theme_classic2()+
theme(strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.x = element_text(face = "italic"),
legend.text = element_text(face = "italic"),
legend.position="none")+
xlab(label = "Gene")+
ylab(label = "ENC")+
NULL
p_fig2c
setwd("~/Dropbox/PhD/2_MethaEvol/0_manuscript/1_figures/Fig3_code/Fig3BCD")
library('ggplot2')
library('ggrepel')
library('gridExtra')
library('scales')
library("EnvStats")
library("ggpubr")
library('ggridges')
df <- read.delim(file = '1_QC_V_manuallycurated.txt', header = TRUE)
all_tAI_df <- read.delim(file = '2_ALL_CH4_tAI_dataframe.txt', header = TRUE)
groups_assignment <- read.csv(file="3_list_isolates.csv")
all_tAI_df_with_group <- merge(x = all_tAI_df, y = groups_assignment, by = "strain")
p_Fig3B <- ggplot(df[(df$gene_category=='pmo/amo' | df$gene_category_subunit=='mxaF' | df$gene_category_subunit=='xoxF') & df$group == "Ia", ],
aes(x=gene_category_subunit, y=ptAI, fill=gene_category, colour=gene_category)) +
geom_point(size=2, alpha = 1/3, position = position_jitter(width=0.1, height = 0)) +
geom_boxplot(fill="transparent", outlier.colour = "transparent")+
scale_y_continuous(limits = c(0, 100)) +
scale_fill_manual(values = c("#4DAF4A", "#984EA3", "orange")) +
scale_colour_manual(values = c("#4DAF4A", "#984EA3", "orange")) +
theme_classic2()+
stat_n_text(y.pos=0, geom="text")+
#stat_compare_means(aes(label = paste0("p = ", ..p.format..)), label.x = 1.5, label.y = 25, ref.group = "pmoB", method = "t.test") +
stat_compare_means(label.x = 1.5, label.y = 25) +
theme(axis.text=element_text(size=12),
axis.text.y = element_text(colour = "black"),
axis.text.x = element_text(face="italic", colour = "black"),
axis.title.x = element_blank(),
axis.title=element_text(size=14, face="bold"),
legend.position="none",
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ylab(label = "Percentile rank of tAI")+
NULL
#ggsave(filename = "Fig3B.pdf", plot = p_Fig3B, device = "pdf", width = 5, height = 5, useDingbats=FALSE)
p_Fig3C <- ggplot(df[(df$gene_category=='pmo/amo' | df$gene_category=='pxm' | df$gene_category_subunit=='hao') & df$group=='Ia', ],
aes(x=gene_category_subunit, y=ptAI, fill=gene_category, colour=gene_category)) +
geom_point(size=2, alpha = 1/3, position = position_jitter(width=0.1, height = 0)) +
geom_boxplot(fill="transparent", outlier.colour = "transparent")+
scale_y_continuous(limits = c(0, 100)) +
scale_fill_manual(values = c("grey70", "#984EA3", "grey70")) +
scale_colour_manual(values = c("grey70", "#984EA3", "grey70")) +
theme_classic2()+
stat_n_text(y.pos=0, geom="text")+
stat_compare_means(label.x = 1.5, label.y = 25) +
#stat_compare_means(aes(label = paste0("p = ", ..p.format..)), label.x = 1.5, label.y = 25, ref.group = "pmoB", method = "t.test") +
theme(axis.text=element_text(size=12),
axis.text.y = element_text(colour = "black"),
axis.text.x = element_text(face="italic", colour = "black"),
axis.title.x = element_blank(),
axis.title=element_text(size=14, face="bold"),
legend.position="none",
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ylab(label = "")+
NULL
p_Fig3B
#------ New 3BC ------#
my_comparisonsB <- list( c("pmoC", "mxaF"), c("pmoC", "mxaI") )
p_Fig3B_new <- ggplot(df[(df$gene_category=='pmo/amo' | df$gene_category=='mxa' | df$gene_category_subunit=='xoxF') & df$group == "Ia", ],
aes(x=gene_category_subunit, y=ptAI, fill=gene_category, colour=gene_category)) +
geom_point(size=2, alpha = 1/3, position = position_jitter(width=0.1, height = 0)) +
geom_boxplot(fill="transparent", outlier.colour = "transparent")+
#scale_y_continuous(limits = c(0, 100)) +
scale_fill_manual(values = c("#4DAF4A", "#984EA3", "orange")) +
scale_colour_manual(values = c("#4DAF4A", "#984EA3", "orange")) +
scale_x_discrete(limits=c("pmoC", "pmoB", "pmoA", "xoxF", "mxaF", "mxaI")) +
stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisonsB, method = "t.test", method.args = list(conf.level = 0.99, alternative = "two.sided") )+
theme_classic2()+
stat_n_text(y.pos=0, geom="text")+
theme(axis.text=element_text(size=12),
axis.text.y = element_text(colour = "black"),
axis.text.x = element_text(face="italic", colour = "black"),
axis.title.x = element_blank(),
axis.title=element_text(size=14, face="bold"),
legend.position="none",
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ylab(label = "Percentile rank of tAI")+
NULL
p_Fig3B_new
p_Fig3B_new <- ggplot(df[(df$gene_category=='pmo/amo' | df$gene_category=='mxa' | df$gene_category_subunit=='xoxF') & df$group == "Ia", ],
aes(x=gene_category_subunit, y=ptAI, fill=gene_category, colour=gene_category)) +
geom_point(size=2, alpha = 1/3, position = position_jitter(width=0.1, height = 0)) +
geom_boxplot(fill="transparent", outlier.colour = "transparent")+
#scale_y_continuous(limits = c(0, 100)) +
scale_fill_manual(values = c("#4DAF4A", "#984EA3", "orange")) +
scale_colour_manual(values = c("#4DAF4A", "#984EA3", "orange")) +
scale_x_discrete(limits=c("pmoC", "pmoB", "pmoA", "xoxF", "mxaF", "mxaI")) +
stat_compare_means( comparisons = my_comparisonsB, method = "t.test", method.args = list(conf.level = 0.99, alternative = "two.sided") )+
theme_classic2()+
stat_n_text(y.pos=0, geom="text")+
theme(axis.text=element_text(size=12),
axis.text.y = element_text(colour = "black"),
axis.text.x = element_text(face="italic", colour = "black"),
axis.title.x = element_blank(),
axis.title=element_text(size=14, face="bold"),
legend.position="none",
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ylab(label = "Percentile rank of tAI")+
NULL
p_Fig3B_new
p_Fig3C_new
p_Fig3C_new <- ggplot(df[(df$gene_category=='pmo/amo' | df$gene_category=='pxm' | df$gene_category_subunit=='hao') & df$group=='Ia', ],
aes(x=gene_category_subunit, y=ptAI, fill=gene_category, colour=gene_category)) +
geom_point(size=2, alpha = 1/3, position = position_jitter(width=0.1, height = 0)) +
geom_boxplot(fill="transparent", outlier.colour = "transparent")+
#scale_y_continuous(limits = c(0, 100)) +
scale_fill_manual(values = c("grey70", "#984EA3", "grey70")) +
scale_colour_manual(values = c("grey70", "#984EA3", "grey70")) +
scale_x_discrete(limits=c("pmoC", "pmoB", "pmoA", "hao", "pxmA", "pxmC", "pxmB")) +
stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisonsC, method = "t.test", method.args = list(conf.level = 0.99, alternative = "two.sided") )+
theme_classic2()+
stat_n_text(y.pos=0, geom="text")+
theme(axis.text=element_text(size=12),
axis.text.y = element_text(colour = "black"),
axis.text.x = element_text(face="italic", colour = "black"),
axis.title.x = element_blank(),
axis.title=element_text(size=14, face="bold"),
legend.position="none",
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ylab(label = "")+
NULL
my_comparisonsC <- list( c("pmoC", "pmoA"), c("pmoC", "hao") )
p_Fig3C_new <- ggplot(df[(df$gene_category=='pmo/amo' | df$gene_category=='pxm' | df$gene_category_subunit=='hao') & df$group=='Ia', ],
aes(x=gene_category_subunit, y=ptAI, fill=gene_category, colour=gene_category)) +
geom_point(size=2, alpha = 1/3, position = position_jitter(width=0.1, height = 0)) +
geom_boxplot(fill="transparent", outlier.colour = "transparent")+
#scale_y_continuous(limits = c(0, 100)) +
scale_fill_manual(values = c("grey70", "#984EA3", "grey70")) +
scale_colour_manual(values = c("grey70", "#984EA3", "grey70")) +
scale_x_discrete(limits=c("pmoC", "pmoB", "pmoA", "hao", "pxmA", "pxmC", "pxmB")) +
stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisonsC, method = "t.test", method.args = list(conf.level = 0.99, alternative = "two.sided") )+
theme_classic2()+
stat_n_text(y.pos=0, geom="text")+
theme(axis.text=element_text(size=12),
axis.text.y = element_text(colour = "black"),
axis.text.x = element_text(face="italic", colour = "black"),
axis.title.x = element_blank(),
axis.title=element_text(size=14, face="bold"),
legend.position="none",
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ylab(label = "")+
NULL
p_Fig3C_new
p_Fig3C_new <- ggplot(df[(df$gene_category=='pmo/amo' | df$gene_category=='pxm' | df$gene_category_subunit=='hao') & df$group=='Ia', ],
aes(x=gene_category_subunit, y=ptAI, fill=gene_category, colour=gene_category)) +
geom_point(size=2, alpha = 1/3, position = position_jitter(width=0.1, height = 0)) +
geom_boxplot(fill="transparent", outlier.colour = "transparent")+
#scale_y_continuous(limits = c(0, 100)) +
scale_fill_manual(values = c("grey70", "#984EA3", "grey70")) +
scale_colour_manual(values = c("grey70", "#984EA3", "grey70")) +
scale_x_discrete(limits=c("pmoC", "pmoB", "pmoA", "hao", "pxmA", "pxmC", "pxmB")) +
stat_compare_means(comparisons = my_comparisonsC, method = "t.test", method.args = list(conf.level = 0.99, alternative = "two.sided") )+
theme_classic2()+
stat_n_text(y.pos=0, geom="text")+
theme(axis.text=element_text(size=12),
axis.text.y = element_text(colour = "black"),
axis.text.x = element_text(face="italic", colour = "black"),
axis.title.x = element_blank(),
axis.title=element_text(size=14, face="bold"),
legend.position="none",
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ylab(label = "")+
NULL
p_Fig3C_new
#install.packages('ggplot2')
#install.packages('ggrepel')
#install.packages('gridExtra')
#install.packages('scales')
#install.packages("EnvStats")
#install.packages("ggpubr")
#install.packages('ggridges')
library('ggplot2')
#install.packages('ggplot2')
#install.packages('ggrepel')
#install.packages('gridExtra')
#install.packages('scales')
#install.packages("EnvStats")
#install.packages("ggpubr")
#install.packages('ggridges')
library('ggplot2')
library('ggrepel')
library('gridExtra')
library('scales')
library("EnvStats")
library("ggpubr")
library('ggridges')
df <- read.delim(file = '1_QC_V_manuallycurated.txt', header = TRUE)
all_tAI_df <- read.delim(file = '2_ALL_CH4_tAI_dataframe.txt', header = TRUE)
groups_assignment <- read.csv(file="3_list_isolates.csv")
all_tAI_df_with_group <- merge(x = all_tAI_df, y = groups_assignment, by = "strain")
p_Fig3B <- ggplot(df[(df$gene_category=='pmo/amo' | df$gene_category_subunit=='mxaF' | df$gene_category_subunit=='xoxF') & df$group == "Ia", ],
aes(x=gene_category_subunit, y=ptAI, fill=gene_category, colour=gene_category)) +
geom_point(size=2, alpha = 1/3, position = position_jitter(width=0.1, height = 0)) +
geom_boxplot(fill="transparent", outlier.colour = "transparent")+
scale_y_continuous(limits = c(0, 100)) +
scale_fill_manual(values = c("#4DAF4A", "#984EA3", "orange")) +
scale_colour_manual(values = c("#4DAF4A", "#984EA3", "orange")) +
theme_classic2()+
stat_n_text(y.pos=0, geom="text")+
#stat_compare_means(aes(label = paste0("p = ", ..p.format..)), label.x = 1.5, label.y = 25, ref.group = "pmoB", method = "t.test") +
stat_compare_means(label.x = 1.5, label.y = 25) +
theme(axis.text=element_text(size=12),
axis.text.y = element_text(colour = "black"),
axis.text.x = element_text(face="italic", colour = "black"),
axis.title.x = element_blank(),
axis.title=element_text(size=14, face="bold"),
legend.position="none",
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ylab(label = "Percentile rank of tAI")+
NULL
p_Fig3C <- ggplot(df[(df$gene_category=='pmo/amo' | df$gene_category=='pxm' | df$gene_category_subunit=='hao') & df$group=='Ia', ],
aes(x=gene_category_subunit, y=ptAI, fill=gene_category, colour=gene_category)) +
geom_point(size=2, alpha = 1/3, position = position_jitter(width=0.1, height = 0)) +
geom_boxplot(fill="transparent", outlier.colour = "transparent")+
scale_y_continuous(limits = c(0, 100)) +
scale_fill_manual(values = c("grey70", "#984EA3", "grey70")) +
scale_colour_manual(values = c("grey70", "#984EA3", "grey70")) +
theme_classic2()+
stat_n_text(y.pos=0, geom="text")+
stat_compare_means(label.x = 1.5, label.y = 25) +
#stat_compare_means(aes(label = paste0("p = ", ..p.format..)), label.x = 1.5, label.y = 25, ref.group = "pmoB", method = "t.test") +
theme(axis.text=element_text(size=12),
axis.text.y = element_text(colour = "black"),
axis.text.x = element_text(face="italic", colour = "black"),
axis.title.x = element_blank(),
axis.title=element_text(size=14, face="bold"),
legend.position="none",
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ylab(label = "")+
NULL
ggsave(filename = "Fig3BC.pdf",
plot = ggarrange(p_Fig3B, p_Fig3C, ncol = 2, nrow = 1),
device = "pdf",
width = 10,
height = 5,
useDingbats=FALSE)
p_Fig3BCS1 <- ggplot(df, aes(x=gene_category_subunit, y=ptAI)) +
geom_point(alpha = 0.5, position = position_jitter(width=0.1, height = 0), color="grey") +
facet_wrap(~group, ncol = 3, nrow = 3, scales = "free") +
theme_bw() +
stat_n_text(angle = 45, size = 2.5)+
scale_x_discrete(limits=c("pmoC", "pmoB", "pmoA", "xoxF", "mxaF", "mxaI", "mmoB", "mmoC","mmoD","mmoX","mmoY","mmoZ", "hao", "pxmA", "pxmB", "pxmC")) +
stat_summary(fun.y = median, fun.ymin = median, fun.ymax = median, geom = "crossbar", width = 0.7, color="black") +
theme_classic2()+
theme(axis.text.y  = element_text(size=12, colour = "black"),
axis.text.x  = element_text(face="italic", angle = 55, hjust = 1, colour = "black"),
axis.title.x = element_blank(),
axis.title   = element_text(size=14, face="bold"),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
xlab(label = "")+
ylab(label = "Percentile rank of tAI")+
NULL
ggsave(filename = "Fig3BCS1.pdf", plot = p_Fig3BCS1, device = "pdf", width = 10, height = 10, useDingbats=FALSE)
#------ New 3BC ------#
my_comparisonsB <- list( c("pmoC", "mxaF"), c("pmoC", "mxaI") )
p_Fig3B_new <- ggplot(df[(df$gene_category=='pmo/amo' | df$gene_category=='mxa' | df$gene_category_subunit=='xoxF') & df$group == "Ia", ],
aes(x=gene_category_subunit, y=ptAI, fill=gene_category, colour=gene_category)) +
geom_point(size=2, alpha = 1/3, position = position_jitter(width=0.1, height = 0)) +
geom_boxplot(fill="transparent", outlier.colour = "transparent")+
#scale_y_continuous(limits = c(0, 100)) +
scale_fill_manual(values = c("#4DAF4A", "#984EA3", "orange")) +
scale_colour_manual(values = c("#4DAF4A", "#984EA3", "orange")) +
scale_x_discrete(limits=c("pmoC", "pmoB", "pmoA", "xoxF", "mxaF", "mxaI")) +
stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisonsB, method = "t.test", method.args = list(conf.level = 0.99, alternative = "two.sided") )+
theme_classic2()+
stat_n_text(y.pos=0, geom="text")+
theme(axis.text=element_text(size=12),
axis.text.y = element_text(colour = "black"),
axis.text.x = element_text(face="italic", colour = "black"),
axis.title.x = element_blank(),
axis.title=element_text(size=14, face="bold"),
legend.position="none",
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ylab(label = "Percentile rank of tAI")+
NULL
my_comparisonsC <- list( c("pmoC", "pmoA"), c("pmoC", "hao") )
p_Fig3C_new <- ggplot(df[(df$gene_category=='pmo/amo' | df$gene_category=='pxm' | df$gene_category_subunit=='hao') & df$group=='Ia', ],
aes(x=gene_category_subunit, y=ptAI, fill=gene_category, colour=gene_category)) +
geom_point(size=2, alpha = 1/3, position = position_jitter(width=0.1, height = 0)) +
geom_boxplot(fill="transparent", outlier.colour = "transparent")+
#scale_y_continuous(limits = c(0, 100)) +
scale_fill_manual(values = c("grey70", "#984EA3", "grey70")) +
scale_colour_manual(values = c("grey70", "#984EA3", "grey70")) +
scale_x_discrete(limits=c("pmoC", "pmoB", "pmoA", "hao", "pxmA", "pxmC", "pxmB")) +
stat_compare_means(aes(label = ..p.signif..), comparisons = my_comparisonsC, method = "t.test", method.args = list(conf.level = 0.99, alternative = "two.sided") )+
theme_classic2()+
stat_n_text(y.pos=0, geom="text")+
theme(axis.text=element_text(size=12),
axis.text.y = element_text(colour = "black"),
axis.text.x = element_text(face="italic", colour = "black"),
axis.title.x = element_blank(),
axis.title=element_text(size=14, face="bold"),
legend.position="none",
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
ylab(label = "")+
NULL
ggsave(filename = "Fig3BC_new.pdf",
plot = ggarrange(p_Fig3B_new, p_Fig3C_new, ncol = 2, nrow = 1),
device = "pdf",
width = 10,
height = 5,
useDingbats=FALSE)
ggsave(filename = "Fig3BC_new.pdf",
plot = ggarrange(p_Fig3B_new, p_Fig3C_new, ncol = 2, nrow = 1),
device = "pdf",
width = 15,
height = 5,
useDingbats=FALSE)
ggsave(filename = "Fig3BC_new.pdf",
plot = ggarrange(p_Fig3B_new, p_Fig3C_new, ncol = 2, nrow = 1),
device = "pdf",
width = 10,
height = 5,
useDingbats=FALSE)
ggsave(filename = "Fig3BCS1.pdf", plot = p_Fig3BCS1, device = "pdf", width = 10, height = 7, useDingbats=FALSE)
